<?xml version="1.0" encoding="UTF-8"?>
<!--

 *******************************************************************************
 *
 * Copyright (c) 2010-2011, Sonatype, Inc.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors: 
 *
 *    Sonatype, Inc.
 *     
 *******************************************************************************
 
-->
<xs:schema
        version="1.0"
        targetNamespace="http://hudson-ci.org/xsd/hudson/2.1.0/maven/common"
        xmlns="http://hudson-ci.org/xsd/hudson/2.1.0/maven/common"
        xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
        xmlns:annox="http://annox.dev.java.net"
        xmlns:xstream="http://annox.dev.java.net/com.thoughtworks.xstream.annotations"
        xmlns:ci="http://hudson-ci.org/jaxb/hudson/code-insert"
        xmlns:idb="http://hudson-ci.org/jaxb/hudson/id-builder"
        xsi:schemaLocation="
            http://java.sun.com/xml/ns/jaxb http://java.sun.com/xml/ns/jaxb/bindingschema_2_0.xsd
            http://www.w3.org/2001/XMLSchema http://www.w3.org/2001/XMLSchema.xsd"
        jaxb:version="2.1"
        jaxb:extensionBindingPrefixes="annox ci idb">

    <xs:annotation>
        <xs:appinfo>
            <jaxb:schemaBindings>
                <jaxb:package name="org.hudsonci.maven.model"/>
                <jaxb:nameXmlTransform>
                    <jaxb:elementName suffix="DTO"/>
                    <jaxb:typeName suffix="DTO"/>
                </jaxb:nameXmlTransform>
            </jaxb:schemaBindings>
        </xs:appinfo>
    </xs:annotation>

    <xs:complexType name="mavenCoordinates">
        <xs:annotation>
            <xs:appinfo>
                <ci:code>
                    @Override
                    public String toString() {
                        return MavenCoordinatesDTOHelper.asString(this);
                    }

                    public String toString(final MavenCoordinatesDTOHelper.RenderStyle style) {
                        return MavenCoordinatesDTOHelper.asString(this, style);
                    }

                    public MavenCoordinatesDTO normalize() {
                        return MavenCoordinatesDTOHelper.normalize(this);
                    }

                    public boolean isSnapshot() {
                        return MavenCoordinatesDTOHelper.isSnapshot(this);
                    }
                </ci:code>
                <idb:exclude fields="expandedMetaVersion"/>
            </xs:appinfo>
        </xs:annotation>
        <xs:attribute name="groupId" type="xs:string" use="required"/>
        <xs:attribute name="artifactId" type="xs:string" use="required"/>
        <xs:attribute name="version" type="xs:string"/>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="classifier" type="xs:string"/>
        <!--
            The -SNAPSHOT version as a timestamp, may be null.
            See org.sonatype.aether.artifact.Artfact baseVersion vs version.
        -->
        <xs:attribute name="expandedMetaVersion" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="properties">
        <xs:annotation>
            <xs:appinfo>
                <ci:code>
                    public void set(Object name, Object value) {
                        PropertiesDTOHelper.set(this, name, value);
                    }

                    public PropertiesDTO with(Object name, Object value) {
                        set(name, value);
                        return this;
                    }

                    public String get(Object name) {
                        return PropertiesDTOHelper.get(this, name);
                    }

                    public boolean contains(Object name) {
                        return PropertiesDTOHelper.contains(this, name);
                    }
                </ci:code>
            </xs:appinfo>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="entry" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:annotation>
                        <xs:appinfo>
                            <annox:annotate>
                                <xstream:XStreamAlias value="entry"/>
                            </annox:annotate>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:attribute name="name" type="xs:string" use="required"/>
                    <xs:attribute name="value" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="throwable">
        <xs:sequence>
            <xs:element name="message" type="xs:string" minOccurs="0"/>
            <xs:element name="stackTrace" type="stackTrace" minOccurs="0"/>
            <xs:element name="cause" type="throwable" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="stackTrace">
        <xs:sequence>
            <xs:element name="element" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:annotation>
                        <xs:appinfo>
                            <annox:annotate>
                                <xstream:XStreamAlias value="element"/>
                            </annox:annotate>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:attribute name="type" type="xs:string" use="required"/>
                    <xs:attribute name="method" type="xs:string" use="required"/>
                    <xs:attribute name="file" type="xs:string"/>
                    <xs:attribute name="line" type="xs:int"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="invocation">
        <xs:sequence>
            <xs:element name="method">
                <xs:complexType>
                    <xs:annotation>
                        <xs:appinfo>
                            <annox:annotate>
                                <xstream:XStreamAlias value="invocation-method"/>
                            </annox:annotate>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="type" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                    <xs:attribute name="name" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="arg" type="xs:anyType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="result" minOccurs="0">
                <xs:complexType>
                    <xs:annotation>
                        <xs:appinfo>
                            <annox:annotate>
                                <xstream:XStreamAlias value="invocation-result"/>
                            </annox:annotate>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="value" type="xs:anyType" minOccurs="1"/>
                        <xs:element name="exception" type="xs:boolean" minOccurs="1"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="logLevel">
        <xs:restriction base="xs:string">
            <xs:enumeration value="OFF"/>
            <xs:enumeration value="TRACE"/>
            <xs:enumeration value="DEBUG"/>
            <xs:enumeration value="INFO"/>
            <xs:enumeration value="WARN"/>
            <xs:enumeration value="ERROR"/>
            <xs:enumeration value="ALL"/>
        </xs:restriction>
    </xs:simpleType>

</xs:schema>
